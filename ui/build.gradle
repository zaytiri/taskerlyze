plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'personal.zaytiri.taskerlyze'
version '1.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'personal.zaytiri.taskerlyze.ui'
    mainClass = 'personal.zaytiri.taskerlyze.ui.views.Launcher'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
//    modules = ['javafx.controls', 'javafx.web', 'javafx.fxml', 'javafx.swing']
}

dependencies {
    implementation("personal.zaytiri.taskerlyze:api:1.0")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation 'io.github.palexdev:materialfx:11.17.0'
    implementation("com.google.guava:guava:32.1.3-jre")
    // convert xml to json and vice versa
    implementation 'org.json:json:20231013'

    implementation files('../api/libs/mieq-v1.0.1.jar')
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

jar {
    manifest {
        attributes 'Main-Class': application.mainClass
        attributes 'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' ')
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.withType(Jar.class).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}